<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Setting Up Report Config and data providers]]>
    </line>
    <line>
      <![CDATA[All Config setting Up and data providers done]]>
    </line>
    <line>
      <![CDATA[Setting up browser and app Url]]>
    </line>
    <line>
      <![CDATA[browser and app Url up and running]]>
    </line>
    <line>
      <![CDATA[Test about to end and result generated]]>
    </line>
    <line>
      <![CDATA[Test completed >>> Report ready]]>
    </line>
  </reporter-output>
  <suite started-at="2020-05-30T03:39:00Z" name="Default suite" finished-at="2020-05-30T03:39:36Z" duration-ms="36424">
    <groups>
    </groups>
    <test started-at="2020-05-30T03:39:00Z" name="Default test" finished-at="2020-05-30T03:39:36Z" duration-ms="36424">
      <class name="com.Guru99.Testcases.invalidLoginTestCase">
        <test-method is-config="true" signature="setUpSuite()[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b]" started-at="2020-05-30T03:38:58Z" name="setUpSuite" finished-at="2020-05-30T03:39:00Z" duration-ms="1867" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Setting Up Report Config and data providers]]>
            </line>
            <line>
              <![CDATA[All Config setting Up and data providers done]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b]" started-at="2020-05-30T03:39:00Z" name="setUp" finished-at="2020-05-30T03:39:15Z" duration-ms="14808" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Setting up browser and app Url]]>
            </line>
            <line>
              <![CDATA[browser and app Url up and running]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inValidLoginApp()[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b]" started-at="2020-05-30T03:39:15Z" name="inValidLoginApp" finished-at="2020-05-30T03:39:26Z" duration-ms="11066" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[Dismissed user prompt dialog: User is not valid: 
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-MPC1V8S', ip: '192.168.111.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 76.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200507114007, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 11316, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e7e60eaa-9be1-4e32-9e55-f2477034ea16]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: Dismissed user prompt dialog: User is not valid: 
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-MPC1V8S', ip: '192.168.111.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 76.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200507114007, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 11316, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e7e60eaa-9be1-4e32-9e55-f2477034ea16
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getTitle(RemoteWebDriver.java:281)
at com.Guru99.Testcases.invalidLoginTestCase.inValidLoginApp(invalidLoginTestCase.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inValidLoginApp -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b]" started-at="2020-05-30T03:39:26Z" name="tearDownMethod" finished-at="2020-05-30T03:39:27Z" duration-ms="1149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inValidLoginApp status=FAILURE method=invalidLoginTestCase.inValidLoginApp()[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test about to end and result generated]]>
            </line>
            <line>
              <![CDATA[Test completed >>> Report ready]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Guru99.Testcases.invalidLoginTestCase@48aca48b]" started-at="2020-05-30T03:39:27Z" name="tearDown" finished-at="2020-05-30T03:39:36Z" duration-ms="9349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Guru99.Testcases.invalidLoginTestCase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
